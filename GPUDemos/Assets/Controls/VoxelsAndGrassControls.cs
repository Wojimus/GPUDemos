//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Controls/VoxelsAndGrassControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @VoxelsAndGrassControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @VoxelsAndGrassControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""VoxelsAndGrassControls"",
    ""maps"": [
        {
            ""name"": ""Camera"",
            ""id"": ""582f5f9f-dae8-41bb-aed2-97b64ec1b82c"",
            ""actions"": [
                {
                    ""name"": ""XAxis"",
                    ""type"": ""PassThrough"",
                    ""id"": ""97c846b8-ee84-441e-bfa1-a02bd8fb38b0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""YAxis"",
                    ""type"": ""PassThrough"",
                    ""id"": ""73176756-7612-486c-bade-1df653de4fb2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rotate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""7f8aaca3-7bc5-4118-8b22-673f242572cb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shift"",
                    ""type"": ""Button"",
                    ""id"": ""de238ad3-dc2c-434a-a6d4-cb732a4f6b1a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Zoom"",
                    ""type"": ""Value"",
                    ""id"": ""61e61048-e89e-44c7-b5da-24bdb1619442"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""2302e183-ecac-4ac0-941f-de2b5af18248"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""XAxis"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""f8690c54-81ba-4a36-97a4-996a657e3210"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""XAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""8ca9a417-b18d-4972-904d-49669db967bf"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""XAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""2c9e1018-6bcd-4902-bf58-5d15fc8a8620"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""XAxis"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""574ce7cc-7978-4bb2-bac2-073f38c4583e"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""XAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""2403c634-b168-4e49-a4c9-162cda9b8bf5"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""XAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""81bf832d-0d2d-4e09-a357-78f990bad09c"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""YAxis"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""9fd35aa1-323b-4d08-ae48-f9eae3b10c2d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""YAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""79ffb79a-f62c-4b0e-80b3-a3ee830fe04e"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""YAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""5a1db135-75e6-4c2c-94c8-bab31bfc507e"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""YAxis"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""6130c9dd-3a7b-4d1e-908c-dcb9a9d6bdfb"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""YAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""579bacf4-1480-49da-9fc6-fd7477c63c91"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""YAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""a8ce358d-61ea-4348-98b2-3b46c9015552"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""Shift"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5dd90c5f-e887-448a-a8e7-8f399dfb2a2d"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""87b7a816-4210-4280-baed-af913c2f0054"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""96b44bb5-fa55-450d-b0bc-ce79dfa1e330"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""022b4c0f-4bdb-4f58-8b32-d7828afa11a5"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""4e7fbdda-7c2e-49ef-92cc-2a0edfeb8fdb"",
            ""actions"": [
                {
                    ""name"": ""DebugMenu"",
                    ""type"": ""Button"",
                    ""id"": ""9801f64a-b7de-4d5e-bd35-25ed69007bdc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Scroll"",
                    ""type"": ""Value"",
                    ""id"": ""c313d8d8-dfcb-4e93-95ce-f49817840d45"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""EscapeMenu"",
                    ""type"": ""Button"",
                    ""id"": ""3697165d-9526-461c-a6fc-1d87f4722d5a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InventoryMenu"",
                    ""type"": ""Button"",
                    ""id"": ""b5e7793d-2812-4546-b1e4-4f824d1ef3df"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""df749856-9a49-4ba2-9af4-0612c424e535"",
                    ""path"": ""<Keyboard>/f3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""DebugMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""75ac761f-335c-4402-83db-f90a63eeb8e7"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""56138af1-9d00-489c-a8ef-b7968cf7490b"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""EscapeMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0ba3fea2-a7d1-4356-8b16-eb65c945fa5e"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""InventoryMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Interaction"",
            ""id"": ""55ce68d7-77d4-426a-b5cf-9e0f97549f2d"",
            ""actions"": [
                {
                    ""name"": ""LeftClick"",
                    ""type"": ""Button"",
                    ""id"": ""95adcc7a-e349-45dc-92e5-d0ee419c0036"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""Button"",
                    ""id"": ""b8d16efb-6dea-45fb-9e6a-1c891822bb08"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Scroll"",
                    ""type"": ""Value"",
                    ""id"": ""34d3738a-7f58-470e-8693-c874f2dd6040"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""8f929b85-5729-4b33-87c2-aa010332ecd7"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""LeftClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""66d08cb5-8f4e-4e6e-bf63-31684bfbc94f"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""de15e912-a6de-4cf4-a43a-8881dc2e8247"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": ""NormalizeVector2"",
                    ""groups"": ""Default"",
                    ""action"": ""Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Default"",
            ""bindingGroup"": ""Default"",
            ""devices"": []
        }
    ]
}");
        // Camera
        m_Camera = asset.FindActionMap("Camera", throwIfNotFound: true);
        m_Camera_XAxis = m_Camera.FindAction("XAxis", throwIfNotFound: true);
        m_Camera_YAxis = m_Camera.FindAction("YAxis", throwIfNotFound: true);
        m_Camera_Rotate = m_Camera.FindAction("Rotate", throwIfNotFound: true);
        m_Camera_Shift = m_Camera.FindAction("Shift", throwIfNotFound: true);
        m_Camera_Zoom = m_Camera.FindAction("Zoom", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_DebugMenu = m_UI.FindAction("DebugMenu", throwIfNotFound: true);
        m_UI_Scroll = m_UI.FindAction("Scroll", throwIfNotFound: true);
        m_UI_EscapeMenu = m_UI.FindAction("EscapeMenu", throwIfNotFound: true);
        m_UI_InventoryMenu = m_UI.FindAction("InventoryMenu", throwIfNotFound: true);
        // Interaction
        m_Interaction = asset.FindActionMap("Interaction", throwIfNotFound: true);
        m_Interaction_LeftClick = m_Interaction.FindAction("LeftClick", throwIfNotFound: true);
        m_Interaction_RightClick = m_Interaction.FindAction("RightClick", throwIfNotFound: true);
        m_Interaction_Scroll = m_Interaction.FindAction("Scroll", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Camera
    private readonly InputActionMap m_Camera;
    private ICameraActions m_CameraActionsCallbackInterface;
    private readonly InputAction m_Camera_XAxis;
    private readonly InputAction m_Camera_YAxis;
    private readonly InputAction m_Camera_Rotate;
    private readonly InputAction m_Camera_Shift;
    private readonly InputAction m_Camera_Zoom;
    public struct CameraActions
    {
        private @VoxelsAndGrassControls m_Wrapper;
        public CameraActions(@VoxelsAndGrassControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @XAxis => m_Wrapper.m_Camera_XAxis;
        public InputAction @YAxis => m_Wrapper.m_Camera_YAxis;
        public InputAction @Rotate => m_Wrapper.m_Camera_Rotate;
        public InputAction @Shift => m_Wrapper.m_Camera_Shift;
        public InputAction @Zoom => m_Wrapper.m_Camera_Zoom;
        public InputActionMap Get() { return m_Wrapper.m_Camera; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CameraActions set) { return set.Get(); }
        public void SetCallbacks(ICameraActions instance)
        {
            if (m_Wrapper.m_CameraActionsCallbackInterface != null)
            {
                @XAxis.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnXAxis;
                @XAxis.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnXAxis;
                @XAxis.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnXAxis;
                @YAxis.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnYAxis;
                @YAxis.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnYAxis;
                @YAxis.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnYAxis;
                @Rotate.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnRotate;
                @Rotate.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnRotate;
                @Rotate.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnRotate;
                @Shift.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnShift;
                @Shift.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnShift;
                @Shift.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnShift;
                @Zoom.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnZoom;
                @Zoom.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnZoom;
                @Zoom.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnZoom;
            }
            m_Wrapper.m_CameraActionsCallbackInterface = instance;
            if (instance != null)
            {
                @XAxis.started += instance.OnXAxis;
                @XAxis.performed += instance.OnXAxis;
                @XAxis.canceled += instance.OnXAxis;
                @YAxis.started += instance.OnYAxis;
                @YAxis.performed += instance.OnYAxis;
                @YAxis.canceled += instance.OnYAxis;
                @Rotate.started += instance.OnRotate;
                @Rotate.performed += instance.OnRotate;
                @Rotate.canceled += instance.OnRotate;
                @Shift.started += instance.OnShift;
                @Shift.performed += instance.OnShift;
                @Shift.canceled += instance.OnShift;
                @Zoom.started += instance.OnZoom;
                @Zoom.performed += instance.OnZoom;
                @Zoom.canceled += instance.OnZoom;
            }
        }
    }
    public CameraActions @Camera => new CameraActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private IUIActions m_UIActionsCallbackInterface;
    private readonly InputAction m_UI_DebugMenu;
    private readonly InputAction m_UI_Scroll;
    private readonly InputAction m_UI_EscapeMenu;
    private readonly InputAction m_UI_InventoryMenu;
    public struct UIActions
    {
        private @VoxelsAndGrassControls m_Wrapper;
        public UIActions(@VoxelsAndGrassControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @DebugMenu => m_Wrapper.m_UI_DebugMenu;
        public InputAction @Scroll => m_Wrapper.m_UI_Scroll;
        public InputAction @EscapeMenu => m_Wrapper.m_UI_EscapeMenu;
        public InputAction @InventoryMenu => m_Wrapper.m_UI_InventoryMenu;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void SetCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterface != null)
            {
                @DebugMenu.started -= m_Wrapper.m_UIActionsCallbackInterface.OnDebugMenu;
                @DebugMenu.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnDebugMenu;
                @DebugMenu.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnDebugMenu;
                @Scroll.started -= m_Wrapper.m_UIActionsCallbackInterface.OnScroll;
                @Scroll.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnScroll;
                @Scroll.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnScroll;
                @EscapeMenu.started -= m_Wrapper.m_UIActionsCallbackInterface.OnEscapeMenu;
                @EscapeMenu.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnEscapeMenu;
                @EscapeMenu.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnEscapeMenu;
                @InventoryMenu.started -= m_Wrapper.m_UIActionsCallbackInterface.OnInventoryMenu;
                @InventoryMenu.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnInventoryMenu;
                @InventoryMenu.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnInventoryMenu;
            }
            m_Wrapper.m_UIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @DebugMenu.started += instance.OnDebugMenu;
                @DebugMenu.performed += instance.OnDebugMenu;
                @DebugMenu.canceled += instance.OnDebugMenu;
                @Scroll.started += instance.OnScroll;
                @Scroll.performed += instance.OnScroll;
                @Scroll.canceled += instance.OnScroll;
                @EscapeMenu.started += instance.OnEscapeMenu;
                @EscapeMenu.performed += instance.OnEscapeMenu;
                @EscapeMenu.canceled += instance.OnEscapeMenu;
                @InventoryMenu.started += instance.OnInventoryMenu;
                @InventoryMenu.performed += instance.OnInventoryMenu;
                @InventoryMenu.canceled += instance.OnInventoryMenu;
            }
        }
    }
    public UIActions @UI => new UIActions(this);

    // Interaction
    private readonly InputActionMap m_Interaction;
    private IInteractionActions m_InteractionActionsCallbackInterface;
    private readonly InputAction m_Interaction_LeftClick;
    private readonly InputAction m_Interaction_RightClick;
    private readonly InputAction m_Interaction_Scroll;
    public struct InteractionActions
    {
        private @VoxelsAndGrassControls m_Wrapper;
        public InteractionActions(@VoxelsAndGrassControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @LeftClick => m_Wrapper.m_Interaction_LeftClick;
        public InputAction @RightClick => m_Wrapper.m_Interaction_RightClick;
        public InputAction @Scroll => m_Wrapper.m_Interaction_Scroll;
        public InputActionMap Get() { return m_Wrapper.m_Interaction; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InteractionActions set) { return set.Get(); }
        public void SetCallbacks(IInteractionActions instance)
        {
            if (m_Wrapper.m_InteractionActionsCallbackInterface != null)
            {
                @LeftClick.started -= m_Wrapper.m_InteractionActionsCallbackInterface.OnLeftClick;
                @LeftClick.performed -= m_Wrapper.m_InteractionActionsCallbackInterface.OnLeftClick;
                @LeftClick.canceled -= m_Wrapper.m_InteractionActionsCallbackInterface.OnLeftClick;
                @RightClick.started -= m_Wrapper.m_InteractionActionsCallbackInterface.OnRightClick;
                @RightClick.performed -= m_Wrapper.m_InteractionActionsCallbackInterface.OnRightClick;
                @RightClick.canceled -= m_Wrapper.m_InteractionActionsCallbackInterface.OnRightClick;
                @Scroll.started -= m_Wrapper.m_InteractionActionsCallbackInterface.OnScroll;
                @Scroll.performed -= m_Wrapper.m_InteractionActionsCallbackInterface.OnScroll;
                @Scroll.canceled -= m_Wrapper.m_InteractionActionsCallbackInterface.OnScroll;
            }
            m_Wrapper.m_InteractionActionsCallbackInterface = instance;
            if (instance != null)
            {
                @LeftClick.started += instance.OnLeftClick;
                @LeftClick.performed += instance.OnLeftClick;
                @LeftClick.canceled += instance.OnLeftClick;
                @RightClick.started += instance.OnRightClick;
                @RightClick.performed += instance.OnRightClick;
                @RightClick.canceled += instance.OnRightClick;
                @Scroll.started += instance.OnScroll;
                @Scroll.performed += instance.OnScroll;
                @Scroll.canceled += instance.OnScroll;
            }
        }
    }
    public InteractionActions @Interaction => new InteractionActions(this);
    private int m_DefaultSchemeIndex = -1;
    public InputControlScheme DefaultScheme
    {
        get
        {
            if (m_DefaultSchemeIndex == -1) m_DefaultSchemeIndex = asset.FindControlSchemeIndex("Default");
            return asset.controlSchemes[m_DefaultSchemeIndex];
        }
    }
    public interface ICameraActions
    {
        void OnXAxis(InputAction.CallbackContext context);
        void OnYAxis(InputAction.CallbackContext context);
        void OnRotate(InputAction.CallbackContext context);
        void OnShift(InputAction.CallbackContext context);
        void OnZoom(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnDebugMenu(InputAction.CallbackContext context);
        void OnScroll(InputAction.CallbackContext context);
        void OnEscapeMenu(InputAction.CallbackContext context);
        void OnInventoryMenu(InputAction.CallbackContext context);
    }
    public interface IInteractionActions
    {
        void OnLeftClick(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
        void OnScroll(InputAction.CallbackContext context);
    }
}
